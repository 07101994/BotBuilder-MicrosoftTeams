// <auto-generated /> Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Bot.Connector.Teams.Models
{
    using System.Linq;

    /// <summary>
    /// Compose extension result
    /// </summary>
    public partial class ComposeExtensionResult
    {
        /// <summary>
        /// Initializes a new instance of the ComposeExtensionResult class.
        /// </summary>
        public ComposeExtensionResult() { }

        /// <summary>
        /// Initializes a new instance of the ComposeExtensionResult class.
        /// </summary>
        /// <param name="attachmentLayout">Hint for how to deal with multiple
        /// attachments.</param>
        /// <param name="type">The type of the result</param>
        /// <param name="attachments">Attachments</param>
        public ComposeExtensionResult(string attachmentLayout = default(string), string type = default(string), System.Collections.Generic.IList<ComposeExtensionAttachment> attachments = default(System.Collections.Generic.IList<ComposeExtensionAttachment>))
        {
            AttachmentLayout = attachmentLayout;
            Type = type;
            Attachments = attachments;
        }

        /// <summary>
        /// Gets or sets hint for how to deal with multiple attachments.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "attachmentLayout")]
        public string AttachmentLayout { get; set; }

        /// <summary>
        /// Gets or sets the type of the result
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets attachments
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "attachments")]
        public System.Collections.Generic.IList<ComposeExtensionAttachment> Attachments { get; set; }

    }
}
